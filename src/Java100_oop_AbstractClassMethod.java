/*
        추상 클래스와 추상 메서드란 무엇인지 설명하고 관련된 예제 코드를 구현해보시오.
        이 문제는 자바의 추상 클래스, 추상 메서드의 개념과 역할에 대해서 알고 있는지를 묻는 문제이다.
        아래의 질문에 답해보시오?
        ------------------------------------------------------------------------
        1) 추상 클래스란 무엇인가?
        2) 추상 클래스와 일반 클래스의 차이점은 무엇인가?
        3) 추상 클래스는 객체 생성이 가능한가?
        4) 추상 클래스는 어떻게 사용하는가?
        5) 추상 클래스의 역할은 무엇이고 왜 필요한 것인가?
        6) 추상 클래스는 상속이 가능한가?
        7) 추상 클래스의 추상 메서드는 꼭 오버라이딩하여 사용해야만 하는가?
        8) 추상 메서드를 포함하고 있다면 추상 클래스여야 하는가?
        9) 추상 클래스를 만들려면 abstract를 꼭 써야 하는가?

        ------------------------------------------------------------------------
        [내 풀이]
        1. 추상 클래스란 구현을 하지 않은 상태로 선언만 해놓은 것을 말한다.
        2. 일반 클래스는 바로 객체 생성이 가능하지만, 추상 클래스는 구현된 부분이 없기 때문에 자식 클래스에서
        오버라이딩 하여 구현하기 전까지 객체 생성이 불가능하다.
        3. 불가능하다.
        4. 자식 클래스에서 추상 클래스를 상속받아 추상화된 부분을 재정의(오버라이딩)해야만 자식 클래스를 통하여
        구현이 가능하다.
        5. 추상 클래스를 상속 받아 구현할 부분을 추상화 시켜 일종의 설계도를 만들어 놓은 것이기 때문에
        추상 클래스의 설계 방향대로 구현해야만 한다. 이러한 강제성으로 구현할 메서드에 제약을 줄 수도 있고
        필수 코드의 누락 등도 방지할 수 있다. 추상 클래스는 여러명의 개발자가 작업할 때 코드의 확장과 분업을
        효율적으로 처리할 수 있게 해준다. 분업화된 시스템에서 공통의 프로젝트를 진행할 때 많이 사용되는
        중요한 문법이다.
        6. 상속이 가능하다.
        7. 그렇다.
        8. 그렇지 않다. -> 그렇다가 정답
        9. 그렇다.
        ------------------------------------------------------------------------
        [쌤 풀이]
        추상 클래스는 구체적인 내용이 없기 때문에 객체를 생성할 수 없다.

        추상 클래스 사용은? --> 상속을 받아서 사용.

        Summary
        추상(부모) 클래스는 다른(자식) 클래스들의 공통적인 특징을 변수나 메서드로 정의만 해놓는 것을 말한다. --> 추상 메서드
        abstract를 앞에 붙이고 클래스 안에 추상 메서드를 포함하고 있다는 것을 제외하면 사실 일반 클래스와 별반 차이가 없다.
        Field, Constructor, Method(추상 메서드 말고 일반 메서드)도 포함할 수 있다.
        메서드 선언만 있고 구체적인 내용은 없으므로 객체를 생성할 수 없다.
        따라서, 부모 클래스로서의 역할은 하지만, 구체적인 사용은 상속받은 자식 클래스에서 재정의(오버라이딩)하여 사용해야 한다. --> 강제성
        추상 클래스에서 선언만 해놓음으로써 이후 새로운(자식) 클래스들이 이를 상속 받아 구현하므로 새로운 클래스를 작성할 때 하나의 틀이 된다.

        왜 쓰지?
        우선 강제하기 위함이다.
        부모(추상) 클래스가 선언해놓은 메서드를 상속받은 자식 클래스들이 이름 그대로 재정의해서 구현하라고 강제하는 것이다.
        상속받은 자식 클래스 입장에서는 자칫 상속만 받고 재정의해서 사용을 안할 수도 있기 때문이다.
        즉, 일반 메서드로 구현하면 누군가는 해당 메서드를 구현 안 할 수도 있다.
        무조건 상속받은 자식 클래스 입장에서는 추상 메서드를 재정의해서 구현하도록 강제하기 위함이다.
        위의 cat 클래스에서 재정의한 cry() 메서드를 지워보자. --> 에러나는 이유는 추상 메서드를 재정의(오버라이딩)하지 않아서이다.

        꼭 재정의(override)해야만 하는가?
        일단 그렇다.
        자식 클래스는 일단은 무조건 부모(추상) 클래스로 부터 상속받은 추상 메서드는 오버라이딩해서 재정의해야 한다.
        추상 메서드를 포함하고 있다면 곧 추상 클래스여야 한다.

        만약, 재정의 하고 싶지 않다면?
        자식 클래스에서 상속받은 추상 메서드를 구현하지 않는다면 자식 클래스도 abstract를 붙여서 추상으로 만들어준다.
        class 앞에다가 abstract를 붙인다.

        결론
        부모(추상) 클래스에서 구현을 하지 않는 이유는 해당 메서드의 구현이 상속받는 클래스에 따라서 달라질 수 있기 때문에 선언만 해둔 것이다.
        마치 돈 많은 부모가 엄청난 대지만 상속해주고 용도는 자식들이 알아서 사용해라~ 이런 느낌~ ㅎ
        이러한 추상 클래스는 여러명의 개발자가 작업할 때 코드의 확장과 분업을 효율적으로 처리할 수 있게 해준다.
        분업화된 시스템에서 공통의 프로젝트를 진행할 때 많이 사용되어지는 중요한 문법이다.
 */
public class Java100_oop_AbstractClassMethod {
}
